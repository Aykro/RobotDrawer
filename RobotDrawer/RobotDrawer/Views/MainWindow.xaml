<Window x:Class="RobotDrawer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RobotDrawer.Views"
        xmlns:localVMs="clr-namespace:RobotDrawer.ViewModels"
        xmlns:localModels="clr-namespace:RobotDrawer.Models"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:beh ="clr-namespace:RobotDrawer.Behaviours"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="768" Width="1024"
        WindowState="Normal">

    <Window.Resources>
        <Style x:Key="ColourPickStyle"
               TargetType="RadioButton">
            <Setter Property="BorderBrush"
                    Value="Gray"/>
            <Setter Property="Height"
                    Value="25"/>
            <Setter Property="Width"
                    Value="30"/>
            <Setter Property="Cursor"
                    Value="Pen"/>
        </Style>
        <Style x:Key="ShapeButtonStyle"
               TargetType="RadioButton">
            <Setter Property="BorderBrush"
                    Value="Gray"/>
            <Setter Property="Height"
                    Value="25"/>
            <Setter Property="Width"
                    Value="60"/>
            <Setter Property="Background"
                    Value="GhostWhite"/>
        </Style>
        <!-- Insert here your Data Templates -->
        <DataTemplate x:Key="SampleTemplate">
            <StackPanel/>
        </DataTemplate>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ReadConfigFileCommand}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding ClearCanvasCommand}" Gesture="Ctrl+R" />
        <KeyBinding Command="{Binding ExitCmd}" Gesture="Alt+F4" />
    </Window.InputBindings>

    
    <DockPanel>
        <!-- File Menu -->
        <Menu DockPanel.Dock="Top" Margin="0,0,0.4,0">
            <MenuItem Header="File">
                <MenuItem Header="Read Config File" Command="{Binding ReadConfigFileCommand}" InputGestureText="Ctrl+O" />
                <MenuItem Header="Clear all" Command="{Binding ClearCanvasCommand}" InputGestureText="Ctrl+R" />
                <Separator />
                <MenuItem Header="Exit" Command="{Binding ExitCmd}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="About" Command="{Binding ShowAboutDialogCmd}"/>
        </Menu>
        <DockPanel>
            <!-- Toolbar -->
            <ToolBar Name="ToolBar"
                 DockPanel.Dock="Top"
                 Height="30">
                <RadioButton x:Name ="BlackButton" Background="Black" 
                                 Style ="{StaticResource ColourPickStyle}" 
                                 IsChecked="{Binding BlackRadiobuttonChecked}"/>
                <RadioButton Name ="RedButton" Background="Red"
                                 Style="{StaticResource ColourPickStyle}"
                                 IsChecked="{Binding RedRadiobuttonChecked}"/>
                <RadioButton Name = "GreenButton" Background="Green"
                                 Style="{StaticResource ColourPickStyle}"
                                 IsChecked="{Binding GreenRadiobuttonChecked}"/>

                <Separator Background="Gray" Height="25" Width="1"/>

                <RadioButton Name="PenButton" Content="Pen"
                                 GroupName="ShapeGroup" Style="{StaticResource ShapeButtonStyle}"
                                 IsChecked="{Binding PenButtonChecked}"/>
                <RadioButton x:Name="LineButton"  Content="Line" 
                                 GroupName="ShapeGroup" Style="{StaticResource ShapeButtonStyle}"
                                 IsChecked="{Binding LineButtonChecked}"/>
                <RadioButton x:Name="RectangleButton" Content="Rectangle" 
                                 GroupName="ShapeGroup" Style="{StaticResource ShapeButtonStyle}"
                                 IsChecked="{Binding RectangleButtonChecked}"/>
                <RadioButton x:Name="CircleButton" Content="Circle"
                                 GroupName="ShapeGroup" Style="{StaticResource ShapeButtonStyle}"
                                 IsChecked="{Binding CircleButtonChecked}"/>
                <RadioButton x:Name="Eraser" Content="Eraser"
                                 GroupName="ShapeGroup" Style="{StaticResource ShapeButtonStyle}"
                                 IsChecked="{Binding EraserButtonChecked}"/>

                <Separator Background="Gray" Height="25" Width="1"/>

                <RadioButton Name="ConnectButton"
                         Style="{StaticResource ShapeButtonStyle}"
                         Content="Connect" IsChecked="{Binding ConnectButtonChecked}"
                                 IsEnabled="{Binding !IsRobotConnected}"/>
                <RadioButton Name="DisconnectButton"
                         Style="{StaticResource ShapeButtonStyle}"
                         Content="Disconnect" IsChecked="{Binding DisconnectButtonChecked}"
                                 IsEnabled="{Binding IsRobotConnected}"/>
            </ToolBar>
            <!-- Canvas-->
            <InkCanvas x:Name="MyCanvas" Background="White" Margin="10"
                           EditingMode="{Binding EditingMode, Mode=TwoWay}"
                           Height="670" Width="883" 
                           Strokes="{Binding Strokes}" DockPanel.Dock="Bottom"
                           DefaultDrawingAttributes="{Binding DefaultDrawingAttributes, Mode=OneWay}">
                <InkCanvas.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear canvas"/>
                    </ContextMenu>
                </InkCanvas.ContextMenu>
                <i:Interaction.Behaviors>
                    <beh:EventToCommandBehavior Command="{Binding MouseDownCommand}" 
                                                    Event="MouseLeftButtonDown" PassArguments="True" />
                    <beh:EventToCommandBehavior Command="{Binding MouseMoveCommand}"
                                                    Event="MouseMove" PassArguments="True"/>
                    <beh:EventToCommandBehavior Command="{Binding MouseUpCommand}"
                                                    Event="MouseLeftButtonUp" PassArguments="True"/>
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ContextMenuOpening">
                        <i:InvokeCommandAction Command="{Binding ClearCanvasCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </InkCanvas>
        </DockPanel>
    </DockPanel>
</Window>
